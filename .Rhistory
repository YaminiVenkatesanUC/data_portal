fig1
latest_views <- df_events$views_count[df_events$month == latest_report_date]
previous_views <- df_events$views_count[df_events$month == latest_report_date %m-% months(1)]
perc_change <- round(latest_views / previous_views * 100 - 100, 1)
valueBox(value = perc_change, caption = "Change in visits", color = ifelse(previous_views > latest_views, "red", "blue"))
perc_downloaded <- round(df_events$download_count[df_events$month == latest_report_date] / df_events$views_count[df_events$month == latest_report_date] * 100 - 100, 1)
valueBox(value = perc_downloaded, caption = "% of downloads")
perc_downloaded <- round(df_events$download_count[df_events$month == latest_report_date] / df_events$views_count[df_events$month == latest_report_date] * 100, 1)
valueBox(value = perc_downloaded, caption = "% of downloads")
View(df_ind_views)
library(flexdashboard)
library(ggplot2)
library(plotly)
source("scripts/dev/reports/report.R")
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = n()) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name, type = "histogram", name = "Total visits per indicator"
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = n()) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator"
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator"
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator", categoryorder='total descending'
)
fig2
library(ggplot)
library(ggplot2)
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- ggplot(ind_views_total, aes(x = indicator_name, y = ind_views))+
geom_bar()
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- ggplot(ind_views_total, aes(x = indicator_name, y = count))+
geom_bar()
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- ggplot(ind_views_total, aes(x = indicator_name, y = count))+
geom_bar(stat = "identity")
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- ggplot(ind_views_total, aes(x = indicator_name, y = count))+
geom_bar(stat = "identity")
fig2 <- ggplotly(fig2)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator", categoryorder='total descending'
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator"
)
fig2.update_xaxes(categoryorder='total descending')
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
str(ind_views_total)
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator"
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
ind_views_total$indicator_name <- factor(ind_views_total$indicator_name, levels = ind_views_total[["indicator_name"]])
str(ind_views_total)
fig2 <- plot_ly(
x = ind_views_total$indicator_name,
y = ind_views_total$count,
type = "bar", name = "Total visits per indicator"
)
fig2
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count))
valueBox(head(ind_views_total$indicator_name, n = 10))
ind_views_month <- df_ind_views %>%
filter(month == latest_report_date) %>%
arrange(desc(ind_views))
ind_views_month$indicator_name <- factor(ind_views_month$indicator_name, levels = ind_views_month[["indicator_name"]])
fig3 <- plot_ly(
x = ind_views_month$indicator_name,
y = ind_views_month$ind_views,
type = "bar", name = "Total visits per indicator"
)
fig3
ind_views_month <- df_ind_views %>%
filter(month == latest_report_date) %>%
arrange(desc(ind_views))
ind_views_month$indicator_name <- factor(ind_views_month$indicator_name, levels = ind_views_month[["indicator_name"]])
fig3 <- plot_ly(
x = ind_views_month$indicator_name,
y = ind_views_month$ind_views,
type = "bar", name = "Visits per indicator last month"
) %>%
layout(title = "Visits per indicator last month",
xaxis = "")
fig3
ind_views_month <- df_ind_views %>%
filter(month == latest_report_date) %>%
arrange(desc(ind_views))
ind_views_month$indicator_name <- factor(ind_views_month$indicator_name, levels = ind_views_month[["indicator_name"]])
fig3 <- plot_ly(
x = ind_views_month$indicator_name,
y = ind_views_month$ind_views,
type = "bar", name = "Visits per indicator last month"
) %>%
layout(title = "Visits per indicator last month")
fig3
ind_views_month <- df_ind_views %>%
filter(month == latest_report_date) %>%
arrange(desc(ind_views))
ind_views_month$indicator_name <- factor(ind_views_month$indicator_name, levels = ind_views_month[["indicator_name"]])
fig3 <- plot_ly(
x = ind_views_month$indicator_name,
y = ind_views_month$ind_views,
type = "bar", name = "Visits per indicator last month"
) %>%
layout(title = "Visits per indicator last month",
xaxis = list(
visible = FALSE
))
fig3
setwd("~/data_portal")
?valueBox
library(flexdashboard)
library(ggplot2)
library(plotly)
setwd("~/data_portal")
source("scripts/dev/reports/report.R")
totalInd <- df_events$ind_count_cum[length(df_events$ind_count_cum)]
valueBox(value = totalInd, color = "primary")
totalInd <- df_events$ind_count_cum[length(df_events$ind_count_cum)]
valueBox(value = totalInd, color = "primary", icon = "fa-tag")
knit_with_parameters('~/data_portal/scripts/dev/reports/dashboard.Rmd')
View(df_indicators)
categories <- names(df_indicators)[10:15]
categories
df_indicators$no_subseries <- !(df_indicators$region | df_indicators$gender | df_indicators$age | df_indicators$ethnic | df_indicators$industry | df_indicators$other)
View(df_indicators)
categories <- names(df_indicators)[10:16]
categories
df_indicators <- definitions %>%
left_join(indicators, by = c("class", "indicator_name", "type")) %>%
select(indicator_name, group_names, filename, date_added, date_dropped, source, download, frequency, disabled) %>%
filter(disabled == FALSE | is.na(disabled)) %>%
select(-disabled) %>%
mutate(date_added = dmy(date_added)) %>%
filter(!is.na(date_added)) %>%
mutate(month = floor_date(date_added, unit = "month"))
series_vec <- c("region", "gender", "age", "ethnic", "sex", "industry")
for (vec in series_vec) {
df_indicators[[vec]] <- str_detect(df_indicators$indicator_name, vec) | str_detect(df_indicators$group_names, vec)
}
df_indicators$gender <- df_indicators$gender | df_indicators$sex
df_indicators <- select(df_indicators, - sex)
df_indicators$other <- df_indicators$group_names != "undefined_name" & !(df_indicators$region | df_indicators$gender | df_indicators$age | df_indicators$ethnic | df_indicators$industry)
df_indicators$no_subseries <- !(df_indicators$region | df_indicators$gender | df_indicators$age | df_indicators$ethnic | df_indicators$industry | df_indicators$other)
df_indicators$source_internal <- str_detect(pattern = "Stats", string = df_indicators$source)
categories <- names(df_indicators)[10:16]
categories
df_indicators[2]
series <- df_indicators %>%
select(region, gender, age, ethnic, industry, other, no_subseries)
categories <- names(df_indicators)[10:16]
series <- df_indicators %>%
select(region, gender, age, ethnic, industry, other, no_subseries)
pie1 <- plot_ly(
x = categories, y = categories,
z = series, type = "heatmap"
)
categories <- names(df_indicators)[10:16]
series <- df_indicators %>%
select(region, gender, age, ethnic, industry, other, no_subseries)
pie1 <- plot_ly(
x = categories, y = categories,
z = series, type = "heatmap"
)
pie1
View(series)
library(flexdashboard)
library(ggplot2)
library(plotly)
setwd("~/data_portal")
source("scripts/dev/reports/report.R")
series <- df_indicators %>%
select(region, gender, age, ethnic, industry, other, no_subseries)
library(dplyr)
data(gapminder, package = "gapminder")
install.packages('gapminder')
data(gapminder, package = "gapminder")
gapminder_2007 <- gapminder::gapminder %>%
filter(year  == max(year)) %>%
mutate(pop_mm = round(pop/1e6))
dout <- data_to_hierarchical(gapminder_2007, c(continent, country), pop_mm)
library(highcharter)
dout <- data_to_hierarchical(gapminder_2007, c(continent, country), pop_mm)
hchart(dout, type = "sunburst")
View(df_ind_views)
View(ind_views_total)
library(flexdashboard)
library(ggplot2)
library(plotly)
setwd("~/data_portal")
source("scripts/dev/reports/report.R")
library(hwordcloud)
install.packages("hwordcloud")
install.packages('wordcloud2')
library(hwordcloud)
library(wordcloud2)
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "50%", height = "200px", theme = "darkgreen")
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "50%")
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%")
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count)) %>%
head(25)
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%")
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", shape = "star")
hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 1)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 2)
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(desc(count)) %>%
head(25)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 2)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 1)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 1, gridSize = '200px')
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 1,minRotation = 0, maxRotation = 0)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = "green")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = "random-green")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = "light-green")
?wordcloud2
library(RColorBrewer)
col_vec <- brewer.pal(10, "BuGn")
col_vec <- brewer.pal(9, "BuGn")
col_vec
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
display.brewer.all()
display.brewer.pal(9, "YlGnBu")
col_vec <- brewer.pal(9, "YlGnBu")
col_vec
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
col_vec <- brewer.pal(8, "YlGnBu")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
col_vec <- brewer.pal(7, "YlGnBu")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(count) %>%
head(25)
col_vec <- brewer.pal(7, "YlOrRd")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(count) %>%
filter(count < 10)
col_vec <- brewer.pal(7, "YlOrRd")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
df_ind_views <- df_indicators %>%
select(indicator_name) %>%
unique() %>%
left_join(df_ind_views)
View(df_ind_views)
df_ind_views <- tibble("indicator_name" = c(), "ind_views" = c(), "month" = c())
for (file in rownames(file.info(list.files(views_monthly_folder, full.names = T)))) {
month <- str_extract(file, "\\d\\d\\d\\d-\\d\\d-\\d\\d")
views <- as.data.frame(read.csv(file)) %>%
separate(col = Indicator, into = c("class", "type", "indicator_name", "group"), sep = "_") %>%
select(indicator_name, Total.Events) %>%
group_by(indicator_name) %>%
mutate(ind_views = sum(Total.Events)) %>%
mutate(month = ymd(month)) %>%
select(-Total.Events) %>%
ungroup() %>%
unique()
df_ind_views <- rbind(df_ind_views, views)
}
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(count)
ind_views_total <- df_indicators %>%
select(indicator_name) %>%
unique() %>%
left_join(ind_views_total)
ind_views_total$count <- ifelse(is.na(ind_views_total$count), 0, ind_views_total$count)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = ind_views_total, size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
library(flexdashboard)
library(ggplot2)
library(plotly)
library(wordcloud2)
setwd("~/data_portal")
source("scripts/dev/reports/report.R")
ind_views_total <- df_ind_views %>%
select(indicator_name, ind_views) %>%
group_by(indicator_name) %>%
summarise(count = sum(ind_views)) %>%
arrange(count)
ind_views_total <- df_indicators %>%
select(indicator_name) %>%
unique() %>%
left_join(ind_views_total) %>%
arrange(count)
ind_views_total$count <- ifelse(is.na(ind_views_total$count), 0, ind_views_total$count)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
col_vec <- brewer.pal(7, "YlGnBu")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
col_vec <- brewer.pal(7, "YlOrRd")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0)
ind_views_total$count <- ifelse(is.na(ind_views_total$count), 1, ind_views_total$count)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0)
col_vec
col_vec <- c("#FFFFB2" "#FED976" "#FEB24C" "#FD8D3C")
col_vec <- c("#FFFFB2", "#FED976", "#FEB24C", "#FD8D3C")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0)
col_vec <- c("#FED976", "#FEB24C", "#FD8D3C")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0)
col_vec <- brewer.pal(7, "YlGnBu")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.3,minRotation = 0, maxRotation = 0, color = col_vec)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
col_vec <- c("#FFBABA", "#FF7B7B", "#FF5252", "#FF0000", "#A70000")
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0)
col_vec <- rep(c("#FFBABA", "#FF7B7B", "#FF5252", "#FF0000", "#A70000"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = head(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, minSize = 0, )
col_vec <- rep(c("#0F5E9C", "#2389DA", "#1CA3EC", "5ABCD8", "74CCF4"))
col_vec <- rep(c("#0F5E9C", "#2389DA", "#1CA3EC", "5ABCD8", "74CCF4"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.5,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
col_vec <- rep(c("#0F5E9C", "#2389DA", "#1CA3EC", "5ABCD8", "74CCF4"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
col_vec <- rep(c("#FFBABA", "#FF7B7B", "#FF5252", "#FF0000", "#A70000"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 10), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 10), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
col_vec <- rep(c("#0F5E9C", "#2389DA", "#1CA3EC", "5ABCD8", "74CCF4"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
brewer.pal()
install.packages('viridis')
install.packages("viridis")
install.packages("viridis")
install.packages("viridis")
library(viridis)
library(flexdashboard)
library(ggplot2)
library(plotly)
library(wordcloud2)
setwd("~/data_portal")
source("scripts/dev/reports/report.R")
col_vec <- viridis(25)
library(ggplot2)
col_vec <- viridis(25)
col_vec <- rep(c("#9fb4ff", "#5976b4", "#070058", "#bfbfbf", "	#002b74"), 5)
col_vec <- rep(c("#9fb4ff", "#5976b4", "#070058", "#bfbfbf", "#002b74"), 5)
#hwordcloud(text = ind_views_total$indicator_name, size = ind_views_total$count, width = "100%", )
wordcloud2(data = tail(ind_views_total, 25), size = 0.4,minRotation = 0, maxRotation = 0, color = col_vec, shuffle = TRUE)
selectInput("indicator", label = "Select indicator:", choices = unique(df_indicators$indicator_name), selected = unique(df_indicators$indicator_name)[1])
install.packages("shinydashboard")
source("scripts/dev/reports/report.R")
shiny::runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
library(shiny)
library(shinydashboard)
runApp('report')
runApp('report')
runApp('report')
runApp('report')
source("R/plot_functions.R")
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
runApp('report')
